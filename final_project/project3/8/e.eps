%!PS-Adobe-2.0
%%Title: e.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Mon Jul  8 15:12:49 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (e.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (duowang)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jul  8 15:12:49 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
980 640 M
63 0 V
5796 0 R
-63 0 V
stroke
860 640 M
[ [(Helvetica) 200.0 0.0 true true 0 (-2.2)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 1056 M
63 0 V
5796 0 R
-63 0 V
stroke
860 1056 M
[ [(Helvetica) 200.0 0.0 true true 0 (-2)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 1472 M
63 0 V
5796 0 R
-63 0 V
stroke
860 1472 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1.8)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 1888 M
63 0 V
5796 0 R
-63 0 V
stroke
860 1888 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1.6)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 2304 M
63 0 V
5796 0 R
-63 0 V
stroke
860 2304 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1.4)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 2720 M
63 0 V
5796 0 R
-63 0 V
stroke
860 2720 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1.2)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 3135 M
63 0 V
5796 0 R
-63 0 V
stroke
860 3135 M
[ [(Helvetica) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 3551 M
63 0 V
5796 0 R
-63 0 V
stroke
860 3551 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.8)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 3967 M
63 0 V
5796 0 R
-63 0 V
stroke
860 3967 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.6)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 4383 M
63 0 V
5796 0 R
-63 0 V
stroke
860 4383 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.4)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 4799 M
63 0 V
5796 0 R
-63 0 V
stroke
860 4799 M
[ [(Helvetica) 200.0 0.0 true true 0 (-0.2)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
980 640 M
0 63 V
0 4096 R
0 -63 V
stroke
980 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2152 640 M
0 63 V
0 4096 R
0 -63 V
stroke
2152 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3324 640 M
0 63 V
0 4096 R
0 -63 V
stroke
3324 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4495 640 M
0 63 V
0 4096 R
0 -63 V
stroke
4495 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5667 640 M
0 63 V
0 4096 R
0 -63 V
stroke
5667 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6839 640 M
0 63 V
0 4096 R
0 -63 V
stroke
6839 440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
980 4799 N
980 640 L
5859 0 V
0 4159 V
-5859 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
160 2719 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Energy)]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
3909 140 M
[ [(Helvetica) 240.0 0.0 true true 0 (Temperature)]
] -80.0 MCshow
LTb
% Begin plot #1
1.000 UP
3.000 UL
LTb
LCa setrgbcolor
LCb setrgbcolor
2123 4636 M
[ [(Helvetica) 200.0 0.0 true true 0 (100)]
] -66.7 MRshow
1.000 UP
3.000 UL
LTb
LCa setrgbcolor
1273 1056 TriU
1332 1055 TriU
1390 1055 TriU
1449 1055 TriU
1507 1055 TriU
1566 1055 TriU
1624 1055 TriU
1683 1055 TriU
1742 1055 TriU
1800 1055 TriU
1859 1055 TriU
1917 1055 TriU
1976 1055 TriU
2035 1055 TriU
2093 1063 TriU
2152 1087 TriU
2210 1056 TriU
2269 1092 TriU
2328 1096 TriU
2386 1094 TriU
2445 1094 TriU
2503 1108 TriU
2562 1104 TriU
2621 1150 TriU
2679 1136 TriU
2738 1138 TriU
2796 1137 TriU
2855 1168 TriU
2913 1195 TriU
2972 1247 TriU
3031 1242 TriU
3089 1462 TriU
3148 1401 TriU
3206 1431 TriU
3265 1414 TriU
3324 1417 TriU
3382 1500 TriU
3441 1816 TriU
3499 1674 TriU
3558 1727 TriU
3617 2330 TriU
3675 2060 TriU
3734 2371 TriU
3792 2362 TriU
3851 3023 TriU
3910 2562 TriU
3968 2431 TriU
4027 2624 TriU
4085 3055 TriU
4144 3253 TriU
4202 3340 TriU
4261 3295 TriU
4320 3489 TriU
4378 3236 TriU
4437 3556 TriU
4495 3509 TriU
4554 3313 TriU
4613 3614 TriU
4671 3487 TriU
4730 3768 TriU
4788 3527 TriU
4847 3720 TriU
4906 3783 TriU
4964 3818 TriU
5023 3736 TriU
5081 3836 TriU
5140 3797 TriU
5198 3988 TriU
5257 3844 TriU
5316 4006 TriU
5374 3959 TriU
5433 3957 TriU
5491 4095 TriU
5550 3843 TriU
5609 3927 TriU
5667 4073 TriU
5726 3924 TriU
5784 4059 TriU
5843 4118 TriU
5902 4148 TriU
5960 4080 TriU
6019 4145 TriU
6077 4162 TriU
6136 4152 TriU
6195 4177 TriU
6253 4198 TriU
6312 4097 TriU
6370 4146 TriU
6429 4151 TriU
6487 4327 TriU
6546 4366 TriU
6605 4399 TriU
6663 4295 TriU
6722 4275 TriU
6780 4395 TriU
6839 4293 TriU
1372 4636 TriU
% End plot #1
% Begin plot #2
1.000 UP
3.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
2123 4436 M
[ [(Helvetica) 200.0 0.0 true true 0 (500)]
] -66.7 MRshow
1.000 UP
3.000 UL
LTb
0.58 0.00 0.83 C 1273 1056 TriU
1332 1056 TriU
1390 1056 TriU
1449 1056 TriU
1507 1056 TriU
1566 1056 TriU
1624 1056 TriU
1683 1056 TriU
1742 1056 TriU
1800 1056 TriU
1859 1056 TriU
1917 1056 TriU
1976 1058 TriU
2035 1058 TriU
2093 1057 TriU
2152 1062 TriU
2210 1063 TriU
2269 1065 TriU
2328 1073 TriU
2386 1079 TriU
2445 1091 TriU
2503 1091 TriU
2562 1100 TriU
2621 1107 TriU
2679 1133 TriU
2738 1164 TriU
2796 1213 TriU
2855 1251 TriU
2913 1227 TriU
2972 1274 TriU
3031 1346 TriU
3089 1414 TriU
3148 1474 TriU
3206 1472 TriU
3265 1554 TriU
3324 1630 TriU
3382 1690 TriU
3441 1536 TriU
3499 1858 TriU
3558 2077 TriU
3617 1859 TriU
3675 2303 TriU
3734 2304 TriU
3792 2565 TriU
3851 2696 TriU
3910 2440 TriU
3968 2795 TriU
4027 2610 TriU
4085 3065 TriU
4144 2996 TriU
4202 3210 TriU
4261 2903 TriU
4320 3300 TriU
4378 3177 TriU
4437 3357 TriU
4495 3417 TriU
4554 3373 TriU
4613 3597 TriU
4671 3469 TriU
4730 3715 TriU
4788 3629 TriU
4847 3742 TriU
4906 3766 TriU
4964 3848 TriU
5023 3832 TriU
5081 3819 TriU
5140 3845 TriU
5198 3886 TriU
5257 3868 TriU
5316 3874 TriU
5374 3863 TriU
5433 3981 TriU
5491 4077 TriU
5550 4019 TriU
5609 4037 TriU
5667 4044 TriU
5726 4099 TriU
5784 4129 TriU
5843 4079 TriU
5902 4129 TriU
5960 4094 TriU
6019 4156 TriU
6077 4201 TriU
6136 4167 TriU
6195 4204 TriU
6253 4153 TriU
6312 4192 TriU
6370 4279 TriU
6429 4201 TriU
6487 4285 TriU
6546 4248 TriU
6605 4278 TriU
6663 4307 TriU
6722 4300 TriU
6780 4282 TriU
6839 4353 TriU
1372 4436 TriU
% End plot #2
% Begin plot #3
1.000 UP
3.000 UL
LTb
0.00 0.62 0.45 C LCb setrgbcolor
2123 4236 M
[ [(Helvetica) 200.0 0.0 true true 0 (1000)]
] -66.7 MRshow
1.000 UP
3.000 UL
LTb
0.00 0.62 0.45 C 1273 1056 TriU
1332 1056 TriU
1390 1056 TriU
1449 1056 TriU
1507 1056 TriU
1566 1056 TriU
1624 1056 TriU
1683 1056 TriU
1742 1058 TriU
1800 1058 TriU
1859 1058 TriU
1917 1056 TriU
1976 1059 TriU
2035 1058 TriU
2093 1060 TriU
2152 1060 TriU
2210 1061 TriU
2269 1066 TriU
2328 1074 TriU
2386 1085 TriU
2445 1082 TriU
2503 1096 TriU
2562 1115 TriU
2621 1126 TriU
2679 1123 TriU
2738 1141 TriU
2796 1170 TriU
2855 1209 TriU
2913 1229 TriU
2972 1243 TriU
3031 1304 TriU
3089 1371 TriU
3148 1355 TriU
3206 1409 TriU
3265 1451 TriU
3324 1572 TriU
3382 1599 TriU
3441 1686 TriU
3499 1663 TriU
3558 1875 TriU
3617 2150 TriU
3675 2567 TriU
3734 2113 TriU
3792 2360 TriU
3851 2483 TriU
3910 2643 TriU
3968 2912 TriU
4027 2745 TriU
4085 2878 TriU
4144 2997 TriU
4202 3162 TriU
4261 3203 TriU
4320 3250 TriU
4378 3341 TriU
4437 3447 TriU
4495 3554 TriU
4554 3501 TriU
4613 3583 TriU
4671 3648 TriU
4730 3665 TriU
4788 3659 TriU
4847 3626 TriU
4906 3700 TriU
4964 3812 TriU
5023 3788 TriU
5081 3812 TriU
5140 3807 TriU
5198 3918 TriU
5257 3939 TriU
5316 3918 TriU
5374 3941 TriU
5433 3918 TriU
5491 3971 TriU
5550 3955 TriU
5609 4022 TriU
5667 4049 TriU
5726 4038 TriU
5784 4069 TriU
5843 4080 TriU
5902 4095 TriU
5960 4145 TriU
6019 4159 TriU
6077 4190 TriU
6136 4214 TriU
6195 4180 TriU
6253 4251 TriU
6312 4251 TriU
6370 4258 TriU
6429 4230 TriU
6487 4311 TriU
6546 4282 TriU
6605 4293 TriU
6663 4304 TriU
6722 4308 TriU
6780 4312 TriU
6839 4304 TriU
1372 4236 TriU
% End plot #3
% Begin plot #4
1.000 UP
3.000 UL
LTb
0.34 0.71 0.91 C LCb setrgbcolor
2123 4036 M
[ [(Helvetica) 200.0 0.0 true true 0 (2000)]
] -66.7 MRshow
1.000 UP
3.000 UL
LTb
0.34 0.71 0.91 C 1273 1056 TriU
1332 1056 TriU
1390 1056 TriU
1449 1056 TriU
1507 1056 TriU
1566 1056 TriU
1624 1056 TriU
1683 1056 TriU
1742 1056 TriU
1800 1056 TriU
1859 1056 TriU
1917 1057 TriU
1976 1057 TriU
2035 1059 TriU
2093 1060 TriU
2152 1063 TriU
2210 1070 TriU
2269 1077 TriU
2328 1080 TriU
2386 1084 TriU
2445 1098 TriU
2503 1107 TriU
2562 1112 TriU
2621 1118 TriU
2679 1137 TriU
2738 1157 TriU
2796 1197 TriU
2855 1208 TriU
2913 1244 TriU
2972 1268 TriU
3031 1303 TriU
3089 1367 TriU
3148 1436 TriU
3206 1451 TriU
3265 1537 TriU
3324 1570 TriU
3382 1651 TriU
3441 1771 TriU
3499 1939 TriU
3558 2035 TriU
3617 2091 TriU
3675 2119 TriU
3734 2405 TriU
3792 2335 TriU
3851 2520 TriU
3910 2554 TriU
3968 2866 TriU
4027 2900 TriU
4085 3005 TriU
4144 2945 TriU
4202 3177 TriU
4261 3163 TriU
4320 3370 TriU
4378 3332 TriU
4437 3490 TriU
4495 3468 TriU
4554 3611 TriU
4613 3563 TriU
4671 3578 TriU
4730 3629 TriU
4788 3713 TriU
4847 3700 TriU
4906 3758 TriU
4964 3759 TriU
5023 3833 TriU
5081 3749 TriU
5140 3840 TriU
5198 3892 TriU
5257 3919 TriU
5316 3946 TriU
5374 3957 TriU
5433 3949 TriU
5491 3955 TriU
5550 3991 TriU
5609 4039 TriU
5667 4045 TriU
5726 4089 TriU
5784 4083 TriU
5843 4108 TriU
5902 4105 TriU
5960 4137 TriU
6019 4164 TriU
6077 4180 TriU
6136 4166 TriU
6195 4191 TriU
6253 4190 TriU
6312 4220 TriU
6370 4255 TriU
6429 4261 TriU
6487 4265 TriU
6546 4258 TriU
6605 4285 TriU
6663 4282 TriU
6722 4302 TriU
6780 4287 TriU
6839 4327 TriU
1372 4036 TriU
% End plot #4
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
980 4799 N
980 640 L
5859 0 V
0 4159 V
-5859 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
